import {defineField} from 'sanity'
import seo from './seo'
import {CoreSchemas, buildCoreSchemaArrayMembers} from './core'
import navbar from './navbar'
import {ArrowUpIcon, DocumentSheetIcon, DocumentTextIcon, StringIcon} from '@sanity/icons'

const title = defineField({
  name: 'srTitle',
  title: 'Star ratings title',
  type: 'object',
  icon: StringIcon,
  fields: [
    {
      name: 'srTitle',
      title: 'Star ratings title',
      type: 'string',
      validation: (Rule) => Rule.required(),
    },
  ],
})

const description = defineField({
  name: 'srDescription',
  title: 'Star ratings description',
  type: 'object',
  icon: DocumentTextIcon,
  fields: [
    {
      name: 'srDescription',
      type: 'text',
      title: 'Star ratings description',
      icon: DocumentTextIcon,
      validation: (Rule) => Rule.required(),
    },
  ],
})

const topPerformer = defineField({
  name: 'topPerformer',
  title: 'Star ratings top performer',
  type: 'object',
  icon: ArrowUpIcon,
  fields: [
    defineField({
      name: 'canstarAward',
      title: 'Canstar Award',
      type: 'image',
      description: 'Canstar custom award image for the top performer of this vertical.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'title',
      title: 'Title',
      type: 'string',
      description: 'Title of top performer section.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'providerName',
      title: 'Provider name',
      type: 'string',
      description: 'Name of the most satisfied provider.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'description',
      type: 'text',
      title: 'Description',
      description:
        'Description explaining why this provider is selected as the best by our customers.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'providerLogo',
      title: 'Provider logo',
      type: 'image',
      description: 'Logo of the provider with whom the customers are most satisfied with.',
      validation: (Rule) => Rule.required(),
    }),
  ],
})

const comparisonTable = defineField({
  name: 'srComparisonTable',
  title: 'Star ratings comparison table',
  type: 'object',
  icon: DocumentSheetIcon,
  fields: [
    {
      name: 'vertical',
      title: 'Vertical',
      type: 'string',
      options: {
        list: [
          'Quick service restaurants',
          'Supermarkets',
          'Electronics Retailers',
          'Real Estate Agents',
        ],
      },
      validation: (Rule) => Rule.required(),
    },
  ],
})

const importantNotes = defineField({
  ...CoreSchemas.richTextObject,
  name: 'srImportantNotes',
  title: 'Star ratings important notes',
  fields: [
    {
      ...CoreSchemas.richTextObject.fields[0],
      name: 'srImportantNotes',
      title: 'Star ratings important notes',
      validation: (Rule) => Rule.required(),
    },
  ],
})

export default {
  name: 'ratings',
  type: 'document',
  title: 'Ratings',
  groups: [
    {
      name: 'seo',
      title: 'SEO',
    },
    {
      name: 'page-components',
      title: 'Page components',
    },
  ],
  fields: [
    defineField({
      ...seo,
      group: 'seo',
    }),
    defineField({
      name: 'title',
      type: 'string',
      validation: (Rule) => Rule.required(),
      group: 'page-components',
    }),
    defineField({
      name: 'slug',
      type: 'slug',
      title: 'Slug',
      description:
        'Slug used to route to the ratings page. Can be autogenerated from title or provided manually.',
      options: {
        source: 'title',
        maxLength: 200, // will be ignored if slugify is set
        slugify: (input) => ('ratings/' + input.toLowerCase().replace(/\s+/g, '-')).slice(0, 200),
      },
      validation: (Rule) => Rule.required(),
      group: ['page-components', 'seo'],
    }),
    defineField({
      name: 'pageBuilder',
      title: 'Page builder',
      type: 'array',
      of: [
        navbar,
        title,
        description,
        topPerformer,
        comparisonTable,
        importantNotes,
        ...buildCoreSchemaArrayMembers(),
      ],
      group: ['page-components']
    }),
  ],
}
